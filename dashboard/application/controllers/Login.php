<?phpdefined('BASEPATH') or exit('No direct script access allowed');error_reporting(0);ini_set('memory_limit', '256M'); // This also needs to be increased in some cases. Can be changed to a higher value as per need)ini_set('sqlsrv.ClientBufferMaxKBSize', '524288'); // Setting to 512Mini_set('pdo_sqlsrv.client_buffer_max_kb_size', '524288');defined('BASEPATH') or exit('No direct script access allowed');class Login extends CI_Controller{    public function __construct()    {        parent::__construct();        $this->load->model('mlogin');    }    function index($msg = NULL)    {        $data = array();        $Login = new MLogin();        $SeesionInfo = $this->session->all_userdata();        if (isset($_SESSION['login']['idUser'])) {            redirect(base_url('index.php/dashboard'));        } else {            $this->load->view('auth/login', $data);        }    }    // Function to get the client IP address    function getLogin()    {        if (isset($_POST['g-recaptcha-response']) && $_POST['g-recaptcha-response'] != '' && $_POST['g-recaptcha-response'] != null) {            $captcha = $_POST['g-recaptcha-response'];            $secret = '6LfNqIwaAAAAAA9QRqeGrkC9yn45U9AbLY3M5whX';            $arrContextOptions = array(                "ssl" => array(                    "verify_peer" => false,                    "verify_peer_name" => false,                ),            );            $url = "https://www.google.com/recaptcha/api/siteverify?secret=" . $secret . "&response=" . $captcha . "&remoteip=" . $_SERVER['REMOTE_ADDR'];            $captcha_response = file_get_contents($url, false, stream_context_create($arrContextOptions));            // use json_decode to extract json response            $response = json_decode($captcha_response);            /*if ($response->success === false) {                $result = array('0' => 'Error', '1' => 'Captcha Validation Failed');            }*/            //... The Captcha is valid you can continue with the rest of your code            //... Add code to filter access using $response . score            //$response->success == true && $response->score >= 0.5            //if ($response->success == true && $response->score >= 0.3)//            $response=1;            if ($response->success == true && $response->score >= 0.3) {                //Do something to denied access                $username = $this->input->post('login_username');                $Password = $this->input->post('login_password');                if (!isset($username) || $username == '' || $username == 'undefined') {                    $result = array('0' => 'Error', '1' => 'Invalid Credentials');                    $flag = 1;                }                if (!isset($Password) || $Password == '' || $Password == 'undefined') {                    $result = array('0' => 'Error', '1' => 'Invalid Credentials');                    $flag = 1;                }                $Login = new MLogin();                $this->form_validation->set_rules('login_username', 'UserName', 'required');                $this->form_validation->set_rules('login_password', 'Password', 'required');                $Custom = new Custom();                if ($this->form_validation->run() == FALSE || $flag == 1) {                    $result = array('0' => 'Error', '1' => 'Invalid Credentials');                    $msg = 'Invalid Credentials';                } else {                    $editArr = array();                    $editArr['attemptDateTime'] = date('Y-m-d H:m:s');                    $msg = '';                    $login = $Login->validate($username, $Password);                    if ($login[0]->attempt >= 5) {                        $msg = 'Account blocked! Please contact administrator';                        $editArr['attempt'] = $login[0]->attempt + 1;                        $Custom->Edit($editArr, 'id', $login[0]->id, 'users_dash');                        $result = array('0' => 'Error', '1' => $msg);                    }                    elseif (count($login) == 1) {//                        if ($Password === $this->encrypt->decode($login[0]->passwordenc)) {                            if (hash('sha512', $Password) === $login[0]->passwordenc) {//                        if ($Password === $login[0]->password) {                            $data = array(                                'idUser' => $this->encrypt->encode($login[0]->id),                                'username' => $this->encrypt->encode($login[0]->username),                                'email' => $this->encrypt->encode($login[0]->email),                                'idGroup' => $this->encrypt->encode($login[0]->idGroup),                                'full_name' => $this->encrypt->encode($login[0]->full_name),                                'isNewUser' => $this->encrypt->encode($login[0]->isNewUser),                                'district' => $this->encrypt->encode($login[0]->district),                                'pwdExpiry' => $this->encrypt->encode($login[0]->pwdExpiry),                                'logged_in' => TRUE                            );                            $this->session->set_userdata('login', $data);                            $msg = 'Login Success';                            $result = array('0' => 'Success', '1' => $msg);                            $editArr['attempt'] = 1;                        } else {                            $msg = 'Invalid Credentials';                            $editArr['attempt'] = $login[0]->attempt + 1;                            $result = array('0' => 'Error', '1' => $msg);                        }                        $Custom->Edit($editArr, 'id', $login[0]->id, 'users_dash');                    } else {                        $msg = 'Invalid Credentials';                        $result = array('0' => 'Error', '1' => $msg);                    }                }                $ip = $this->get_client_ip();                $insert_login = array();                $insert_login['idUser'] = $username;                $insert_login['ip_address'] = $ip;                $insert_login['result'] = $result['1'];                $insert_login['attempted_at'] = date('Y-m-d H:i:s');                $Custom->Insert($insert_login, 'id', 'user_failed_logins', 'N');                $trackarray = array(                    "activityName" => "Login",                    "action" => "Login -> Function: Login/getLogin()",                    "result" => "Login User:  " . $username . ", Message: " . $msg,                    "PostData" => $editArr,                    "affectedKey" => 'id= ' . $login[0]->id,                    "idUser"=>$login[0]->id,                    "username"=>$login[0]->username,                );                $Custom->trackLogs($trackarray, "table_logs");            } else {                $result = array('0' => 'Error', '1' => 'Captcha Validation Failed');            }        } else {            $result = array('0' => 'Error', '1' => 'Invalid Captcha');        }        echo json_encode($result);    }    function get_client_ip()    {        $ipaddress = '';        if (isset($_SERVER['HTTP_CLIENT_IP']))            $ipaddress = $_SERVER['HTTP_CLIENT_IP'];        else if (isset($_SERVER['HTTP_X_FORWARDED_FOR']))            $ipaddress = $_SERVER['HTTP_X_FORWARDED_FOR'];        else if (isset($_SERVER['HTTP_X_FORWARDED']))            $ipaddress = $_SERVER['HTTP_X_FORWARDED'];        else if (isset($_SERVER['HTTP_FORWARDED_FOR']))            $ipaddress = $_SERVER['HTTP_FORWARDED_FOR'];        else if (isset($_SERVER['HTTP_FORWARDED']))            $ipaddress = $_SERVER['HTTP_FORWARDED'];        else if (isset($_SERVER['REMOTE_ADDR']))            $ipaddress = $_SERVER['REMOTE_ADDR'];        else            $ipaddress = 'UNKNOWN';        return $ipaddress;    }    function getLogout()    {        $Custom = new Custom();        $trackarray = array(            "activityName" => "Logout",            "action" => "Logout -> Function: Login/getLogout()",            "result" => "Logout User:  " . $this->encrypt->decode($_SESSION['login']['username']) . ": Logout",            "PostData" => "",            "affectedKey" => 'idUser= ' . $this->encrypt->decode($_SESSION['login']['idUser']),            "idUser"=>$this->encrypt->decode($_SESSION['login']['idUser']),            "username"=>$this->encrypt->decode($_SESSION['login']['username']),        );        $Custom->trackLogs($trackarray, "all_logs");        session_destroy();    }    function recover_password()    {        $this->load->view('auth/recover_password');    }    public function forgetPwd_SendEmail()    {        if (isset($_POST['email']) && $_POST['email'] != '') {            $Mlogin = new MLogin();            $ForgetPass = $Mlogin->ForgetPass($_POST['email']);            if (isset($ForgetPass[0]) && $ForgetPass[0]->password != '' && $ForgetPass[0]->email != '') {                $userName = $ForgetPass[0]->username;                $password = $ForgetPass[0]->password;                $email = $ForgetPass[0]->email;                $this->load->library('email');                $Subject = "Recover Password - " . PROJECT_NAME . ' <br>';                $body = '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">                        <html xmlns="http://www.w3.org/1999/xhtml">                        <head>                            <meta http-equiv="Content-Type" content="text/html; charset=' . strtolower(config_item('charset')) . '" />                            <title>' . html_escape($Subject) . '</title>                            <style type="text/css">                                body {                                    font-family: Arial, Verdana, Helvetica, sans-serif;font-size: 16px;                                }                            </style>                        </head>                        <body><br/>                        Dear ' . $userName . ', <br><br>                        <p>Your old password is: <strong>' . $password . '</strong>. You can change your password from the <a href="https://vcoe1.aku.edu/pro_system/">portal</a>.</p>                        <br>                        <b/>                                                <p style=\'  background-color: yellow; font-weight: 600;\'>Note: This is an automated message , please ignore if the task is completed.</p> <br>                                                <p>Thank you  </p>                         <p>Regards, </p>                        <p><a href="https://vcoe1.aku.edu/pro_system/">PRISM</a></p>                        </body>                        </html>';                $from = 'vcoe1@aku.edu';                $to = $email;                $email_setting = array('mailtype' => 'html');                $this->email->initialize($email_setting);                $res = $this->email                    ->from($from)                    ->to($to)                    ->cc('sk_khan911@hotmail.com')                    ->subject($Subject)                    ->message($body)                    ->send();                if ($res) {                    $result = 1;                } else {                    $result = 2;                }            } else {                $result = 3;            }        } else {            $result = 4;        }        echo $result;    }}